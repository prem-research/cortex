# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import cortex_pb2 as cortex__pb2


class MemoryServiceStub(object):
    """Memory service definition for gRPC
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StoreMemory = channel.unary_unary(
                '/cortex.MemoryService/StoreMemory',
                request_serializer=cortex__pb2.StoreMemoryRequest.SerializeToString,
                response_deserializer=cortex__pb2.StoreMemoryResponse.FromString,
                )
        self.SearchMemories = channel.unary_unary(
                '/cortex.MemoryService/SearchMemories',
                request_serializer=cortex__pb2.SearchMemoryRequest.SerializeToString,
                response_deserializer=cortex__pb2.SearchMemoryResponse.FromString,
                )
        self.DeleteMemory = channel.unary_unary(
                '/cortex.MemoryService/DeleteMemory',
                request_serializer=cortex__pb2.DeleteMemoryRequest.SerializeToString,
                response_deserializer=cortex__pb2.DeleteMemoryResponse.FromString,
                )
        self.UpdateMemory = channel.unary_unary(
                '/cortex.MemoryService/UpdateMemory',
                request_serializer=cortex__pb2.UpdateMemoryRequest.SerializeToString,
                response_deserializer=cortex__pb2.UpdateMemoryResponse.FromString,
                )
        self.ClearMemories = channel.unary_unary(
                '/cortex.MemoryService/ClearMemories',
                request_serializer=cortex__pb2.ClearMemoryRequest.SerializeToString,
                response_deserializer=cortex__pb2.ClearMemoryResponse.FromString,
                )
        self.GetMemory = channel.unary_unary(
                '/cortex.MemoryService/GetMemory',
                request_serializer=cortex__pb2.GetMemoryRequest.SerializeToString,
                response_deserializer=cortex__pb2.GetMemoryResponse.FromString,
                )


class MemoryServiceServicer(object):
    """Memory service definition for gRPC
    """

    def StoreMemory(self, request, context):
        """Store a new memory
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchMemories(self, request, context):
        """Search for memories
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMemory(self, request, context):
        """Delete a memory
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMemory(self, request, context):
        """Update a memory
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearMemories(self, request, context):
        """Clear memories
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMemory(self, request, context):
        """Get memory by ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MemoryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StoreMemory': grpc.unary_unary_rpc_method_handler(
                    servicer.StoreMemory,
                    request_deserializer=cortex__pb2.StoreMemoryRequest.FromString,
                    response_serializer=cortex__pb2.StoreMemoryResponse.SerializeToString,
            ),
            'SearchMemories': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchMemories,
                    request_deserializer=cortex__pb2.SearchMemoryRequest.FromString,
                    response_serializer=cortex__pb2.SearchMemoryResponse.SerializeToString,
            ),
            'DeleteMemory': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMemory,
                    request_deserializer=cortex__pb2.DeleteMemoryRequest.FromString,
                    response_serializer=cortex__pb2.DeleteMemoryResponse.SerializeToString,
            ),
            'UpdateMemory': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMemory,
                    request_deserializer=cortex__pb2.UpdateMemoryRequest.FromString,
                    response_serializer=cortex__pb2.UpdateMemoryResponse.SerializeToString,
            ),
            'ClearMemories': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearMemories,
                    request_deserializer=cortex__pb2.ClearMemoryRequest.FromString,
                    response_serializer=cortex__pb2.ClearMemoryResponse.SerializeToString,
            ),
            'GetMemory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMemory,
                    request_deserializer=cortex__pb2.GetMemoryRequest.FromString,
                    response_serializer=cortex__pb2.GetMemoryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cortex.MemoryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MemoryService(object):
    """Memory service definition for gRPC
    """

    @staticmethod
    def StoreMemory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cortex.MemoryService/StoreMemory',
            cortex__pb2.StoreMemoryRequest.SerializeToString,
            cortex__pb2.StoreMemoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchMemories(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cortex.MemoryService/SearchMemories',
            cortex__pb2.SearchMemoryRequest.SerializeToString,
            cortex__pb2.SearchMemoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteMemory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cortex.MemoryService/DeleteMemory',
            cortex__pb2.DeleteMemoryRequest.SerializeToString,
            cortex__pb2.DeleteMemoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateMemory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cortex.MemoryService/UpdateMemory',
            cortex__pb2.UpdateMemoryRequest.SerializeToString,
            cortex__pb2.UpdateMemoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearMemories(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cortex.MemoryService/ClearMemories',
            cortex__pb2.ClearMemoryRequest.SerializeToString,
            cortex__pb2.ClearMemoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMemory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cortex.MemoryService/GetMemory',
            cortex__pb2.GetMemoryRequest.SerializeToString,
            cortex__pb2.GetMemoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
